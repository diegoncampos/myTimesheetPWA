/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "~@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "~@ionic/angular/css/normalize.css";
@import "~@ionic/angular/css/structure.css";
@import "~@ionic/angular/css/typography.css";
@import '~@ionic/angular/css/display.css';

/* Optional CSS utils that can be commented out */
@import "~@ionic/angular/css/padding.css";
@import "~@ionic/angular/css/float-elements.css";
@import "~@ionic/angular/css/text-alignment.css";
@import "~@ionic/angular/css/text-transformation.css";
@import "~@ionic/angular/css/flex-utils.css";


// Custom styles

.toastCustomStyle {
    // text-align: center;
    font-weight: bold;
}

.timepicker {

    .timepicker__header {
      background-color: var(--ion-color-primary-shade) !important;
    }
  
    .clock-face__clock-hand {
      background-color: var(--ion-color-primary-shade) !important;
  
      &::after {
        background-color: black !important;
      }
  
      &::before {
        border-color: var(--ion-color-primary) !important;
      }
    }
  
    .clock-face__number {
      > span.active {
        background-color: var(--ion-color-primary-shade) !important;
      }
    }
  
    button:not(.timepicker-dial__item) {
      color: var(--ion-color-primary-shade) !important;
    }
    .ngx-timepicker__control--first {
        background: transparent !important;
    }
  }

  .ngx-timepicker-control {
    .ngx-timepicker-control__input {
        background: transparent !important;
    }
  }